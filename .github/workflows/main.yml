name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Snowflake connection by putting secrets into config file
      env:
        SNOWCLI_CONNECTION: ${{secrets.SNOWCLI_CONNECTION}}
      shell: bash
      run: |
        echo -e "$SNOWCLI_CONNECTION" > config.toml
        # Snowflake CLI requires the config.toml file to limit its file permissions to read and write for the file owner only
        chown $USER config.toml
        chmod 0600 config.toml        
          
      # Checkout step is necessary to access repository files
    - name: Checkout repository
      uses: actions/checkout@v4
    # Determine environment based on target branch
    - name: Set environment
      id: set_env
      run: |
        TARGET_BRANCH="${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}"
        
        if [[ $TARGET_BRANCH == "staging" ]]; then
          echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          echo "Environment set to staging"
        elif [[ $TARGET_BRANCH == "main" ]]; then
          echo "DEPLOY_ENV=prod" >> $GITHUB_ENV
          echo "Environment set to production"
        else
          echo "Unexpected branch: $TARGET_BRANCH"
          exit 1
        fi
    # Install Snowflake CLI GitHub Action and point to config file
    - name: Install SnowflakeCLI
      uses: snowflakedb/snowflake-cli-action@v1.5
      with:
        cli-version: "latest"
        default-config-file-path: "config.toml"
    # Fetch latest changes from the repository to Snowflake
    - name: Fetch latest changes to Snowflake
      run: snow git fetch course_repo.public.advanced_data_engineering_snowflake --connection advanced_data_engineering_snowflake 
    # Deploy templates to the data environment -
    - name: Deploy templates to data environment
      run: |
        # Export TARGET_BRANCH for use in this step
        echo "Using branch: ${GITHUB_REF_NAME}"
        snow git execute @advanced_data_engineering_snowflake/branches/{{GITHUB_REF_NAME}}/module-1/hamburg_weather/pipeline/data/ \
        -D "env='${{ env.DEPLOY_ENV }}'" \
        --connection advanced_data_engineering_snowflake \
        --database=COURSE_REPO \
        --schema=PUBLIC
